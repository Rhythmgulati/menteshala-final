<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="./dash.css">
  
    <link rel="stylesheet" href="./find.css">
    <title>Find</title>
</head>
<body>
<div class="container-box">
    <div class="left-box">
         <div class="loader">
                    <span class="loader-text">Welcome...</span>
                    </div>
        <img src="./logo.jpg" alt="" width="100%" height="30%">
    
  
    <a href="/dashboard">Dashboard</a>
    <a href="/mentors">Mentors</a>
    <a href="/find">Other Mentors</a>
    <a href="/chatmentee">Chat Room</a>
    <a href="/logout">Logout</a>



    </div>
    <div class="right-box">
      <div class="banner">
        <img src="./chat.png" alt="">

      </div>

      <div class="search">
         <input type="text" name="text" placeholder="Search Course" class="input" oninput="filterMentors(this.value)">
      </div>
      <div class="outer-container" id="outer-container">
        <div id="outer-box">
         {{#each mentors}}
       {{#if (eq status "Online")}} <!-- Assuming 'status' is a property in your mentors data -->
        <div class="card-3">
            <img src="./man.png" alt="">
            <p>{{fname}} {{lname}}</p>
            <p>Experience: {{exp}}</p>
            <div class="action-btn">
                <p id="status">Online</p>
                <button>Request</button>
            </div>
            
        </div>
    {{/if}}
{{/each}}


         </div>
      </div>
     
       

     

    </div>




<script>
    let filterText = ''; // Initial filter text

    function filterMentors(searchTerm) {
        // Set filterText to the input value
        let mentorsData = {{{mentorsJson}}};
        filterText = searchTerm.trim().toLowerCase();

        const filteredMentors = mentorsData.filter(mentor => {
            // Check if the mentor's 'exp' property matches the filterText
            return typeof mentor.exp === 'string' && mentor.exp.toLowerCase().includes(filterText);
        });

        // Output the filtered mentors
        
        const div = document.getElementById('outer-box');
        div.innerHTML = "";

        // Iterate over filtered mentors and create HTML elements for each mentor
filteredMentors.forEach(mentor => {
    const mentorElement = document.createElement('div');
    mentorElement.classList.add('card-mentors');
    mentorElement.innerHTML = `<img height="50px" width="50px" src="./man.png" alt="">
        <p>${mentor.fname} ${mentor.lname}</p>
        <p>${mentor.exp}</p>
        ${mentor.status === "online" ? 
            `<div class="action-btn"> 
                <p id="status">Online</p>
                <button onclick= "send('${mentor.email}')">Request</button> 
            </div>` 
            : '<p id="status">Offline</p>'}`;

            
            
            div.appendChild(mentorElement);
        });
    }


function send(email) {
    // Data to be sent in the POST request
    const requestData = {
        email: email // Assuming email is a variable containing the email address
    };

    // Configuration for the fetch request
    const requestOptions = {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json', // Specify content type as JSON
        },
        body: JSON.stringify(requestData), // Convert data to JSON format
    };

    // Make the fetch request
    fetch('/request_mentor', requestOptions)
        .then(response => {
            // Check if request was successful
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            // Process the response
            return response.json(); // Assuming the response is in JSON format
        })
        .then(data => {
            // Handle the data returned by the server
            console.log(data);
        })
        .catch(error => {
            // Handle errors
            console.error('There was a problem with your fetch operation:', error);
        });
}

</script>
    
</body>
</html>